defmodule Riax.VMaster do
  use Supervisor

  # def start_link(_), do: start_link()

  def start_link([vnode_module: module, name: name]) do
    # riak_core appends _sup to the application name.
    Supervisor.start_link(__MODULE__, [], name: :name)
  end

  def init([vnode_module: module, service: service]) do
    children = [
      %{
        id: Riax.VNode_master_worker,
        start: {:riak_core_vnode_master, :start_link, [module]}
      }
    ]
    # Register Vnode implementation
    :ok = :riak_core.register(vnode_module: module)
    # Give name to the service
    :ok = :riak_core_node_watcher.service_up(service, self())

    Supervisor.init(children, strategy: :one_for_one, max_restarts: 5, max_seconds: 10)
  end
end
